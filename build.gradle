plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo1.maven.org/maven2/' } // MySQL JDBC 드라이버의 Maven repository 추가
}

dependencies {
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	// runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	runtimeOnly 'mysql:mysql-connector-java:8.0.28' // MySQL JDBC 드라이버의 버전을 명시적으로 지정해야 합니다.
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testAnnotationProcessor 'org.projectlombok:lombok' // 테스트를 위한 lombok 세팅
	testImplementation 'org.projectlombok:lombok' // 테스트를 위한 lombok 세팅
}

tasks.named('test') {
	useJUnitPlatform()
}
